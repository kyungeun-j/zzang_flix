{"version":3,"sources":["_actions/types.js","_actions/userAction.js","components/Register.js","components/Home.js","components/ContentListItem.js","_actions/contentAction.js","components/TopContent.js","components/ContentDetailModal.js","components/Content.js","components/Login.js","components/RegisterForm.js","static/images/loginBackground.jpeg","static/images/mainBackground.jpeg","static/images/logo.png","components/SelectGenre.js","components/GenreInfo.js","components/Navigator.js","components/route_control/PrivateRoute.js","components/route_control/PublicRoute.js","components/Account.js","components/UpdateUserPassword.js","App.js","reportWebVitals.js","_reducers/userReducer.js","_reducers/index.js","index.js"],"names":["LOGIN_CHECK","LOGIN_USER","LOGOUT_USER","token","a","axios","post","USER_URL","then","res","data","result","type","payload","loginUser","loginData","compareEmail","email","password","userData","registerUser","RegisterSection","styled","section","RegisterContainer","div","RegisterInputDiv","select","css","RegisterLabel","RegisterInput","label","input","RegisterBtn","button","EmailErrorDiv","Register","history","useHistory","inputRef","useRef","useState","setEmail","emailError","setEmailError","setSelect","useEffect","current","focus","onClick","e","currentTarget","children","value","onChange","ref","required","preventDefault","indexOf","compareResult","push","pathname","state","HomeSection","HomeContainer","Home","ContentImg","img","ContentInfo","props","hoverLeft","ContentDiv","imgWidth","hoverFlex","ContentListItem","content","modalHandler","bgImgDeskTop","title","age","duration","id","hoverCenter","setHoverCenter","setSectionFlex","onMouseOver","parentEleLeft","getBoundingClientRect","left","parentElement","targetWidth","right","visibleImgCount","Math","floor","window","innerWidth","src","alt","className","genreID","CONTENT_URL","genreList","get","TopContentContainer","BgImg","BgInfo","TopContent","randomContent","style","backgroundImage","logoImg","info","ModalWrapper","visible","ModalOverlay","ModalInner","ContentDetailModal","modalVisible","year","role","tabIndex","ContentList","GenreContainer","genreTypeProps","undefined","slideVisibleProps","GenreContentContainer","GenreList","ContentList2","Content","match","contents","setContents","genre","setGenre","params","setGenreID","moveWidth","setMoveWidth","slideVisible","setSlideVisible","setRandomContent","setModalVisible","modalContent","setModalContent","round","setImgWidth","imgCount","setImgCount","openVal","resizeHandler","addEventListener","removeEventListener","contentList","random","length","Object","values","map","gItem","preSlideHandler","target","tagName","innerText","preWidth","offsetWidth","translateX","transform","nextSlideHandler","nowImgCount","g","genreType","filter","c","cg","LoginSection","LoginContainer","loginError","LoginForm","form","LoginLabel","LoginInput","LoginInputDiv","LoginButton","LoginErrorDiv","RegisterLink","LoginErrorLabel","LoginInputSection","Login","location","useLocation","dispatch","useDispatch","Cookies","setLoginError","pwError","setPwError","setPassword","emailSelect","setEmailSelect","pwSelect","setPwSelect","key","onLoginHandler","onSubmit","borderBottom","msg","el","to","RegFormSection","RegFormContainer","RegForm","RegFormInputSection","RegFormInputDiv","RegFormLabel","RegFormInput","RegFormErrorLabel","RegisterButton","RegisterForm","cookies","registerInfo","setRegisterInfo","onRegisterHandler","border","userID","set","onKeyDown","SelectDiv","SelectGenre","selectGenre","genreOptions","GenreInfo","selectGenreType","textDecoration","color","fontSize","fontWeight","listStyle","Nav","nav","UserEmail","UserBtnList","ul","SubNav","Navigator","user","scrollY","setScrollY","setGenreType","setGenreOptions","isNaN","slice","padding","background","isLogin","logo","width","userEmail","remove","logoutUser","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","AccountSection","AccountContainer","UserInfoContainer","UserUpdateInfo","Account","UpdatePasswordSection","UpdatePasswordContainer","UpdateInputSection","UpdateInputDiv","borderStyle","UpdateLabel","UpdateInput","UpdateErrorLabel","UpdateSaveBtn","UpdateCancelBtn","BtnSection","UpdateUserPassword","newPwError","setNewPwError","newPwConfirmError","setNewPwConfirmError","inputValue","setInputValue","borderColor","inputSelect","setInputSelect","inputFocusHandler","keys","inputValueHandler","inputClickHandler","emptyInputID","inputSelectobj","min","apply","userPW","updatePassword","updateResult","GlobalStyle","createGlobalStyle","mainbackground","loginbackground","App","useSelector","loginCheck","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","persistConfig","storage","persisted","persistReducer","reducer","store","createStore","compose","applyMiddleware","promiseMiddlerware","reduxThunk","navigator","userAgent","includes","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.463327dd.chunk.js","sourcesContent":["// user\nexport const LOGIN_CHECK = 'LOGIN_CHECK';\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';","import { LOGIN_CHECK, LOGIN_USER, LOGOUT_USER } from './types';\nimport axios from 'axios';\n\nconst USER_URL = '/api/user';\n\n// 로그인 여부 체크\n// payload = 로그인 X -> false, 로그인 O -> email\nexport async function loginCheck(token) {\n    const result = await axios.post(USER_URL+'/loginCheck', token).then(res => res.data);\n\n    return {\n        type: LOGIN_CHECK,\n        payload: result\n    };\n}\n\n// 로그인\nexport async function loginUser(loginData) {\n    const result = await axios.post(USER_URL+'/login', loginData).then(res => res.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: result\n    };\n}\n\n// 로그아웃\nexport async function logoutUser(token) {\n    const result = await axios.post(USER_URL+'/logout', token).then(res => res.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: result\n    };\n}\n\n// 이메일 확인\nexport async function compareEmail(email) {\n    return await axios.post(USER_URL+'/compare_email', email).then(res => res.data);\n}\n\n// 비밀번호 변경\nexport async function updatePassword(password, email) {\n    return await axios.post(USER_URL+'/update_password', password, email).then(res => res.data);\n}\n\n// 회원가입\nexport async function registerUser(userData) {\n    const result = await axios.post(USER_URL+'/register', userData).then(res => res.data);\n\n    return {\n        registerUser: result\n    };\n}","import React, { useRef, useState } from 'react'\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { compareEmail } from '../_actions/userAction';\n\nconst RegisterSection = styled.section`\n    width: 600px;\n    height: 65px\n`;\nconst RegisterContainer = styled.div`\n    display: flex;\n    height: 61px;\n    border-radius: 2px;\n    overflow: hidden;\n`;\nconst RegisterInputDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 2;\n    background-color: white;\n    justify-content: center;\n    padding: 11px;\n\n    // email div를 눌렀을 때 input 나타남\n    ${({ select }) => ( select &&\n        css`\n        ${ RegisterLabel } {\n            font-size: 11px;\n        }\n        ${ RegisterInput } {\n            display: block;\n            background: none;\n            border: 0;\n            outline: none;\n            font-size: 16px;\n        }\n        `\n    )}\n`;\nconst RegisterLabel = styled.label`\n    color: gray;\n`;\nconst RegisterInput = styled.input`\n    display: none;\n`;\nconst RegisterBtn = styled.button`\n    font-size: 1.6rem;\n    padding: 0 2rem;\n    background-color: #e50914;\n    color: white;\n    border-style: none;\n`;\nconst EmailErrorDiv = styled.div`\n    color: #ffa00a;\n`;\n\nfunction Register() {\n    const history = useHistory();\n    const inputRef = useRef();\n    const [email, setEmail] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [select, setSelect] = useState(false);\n\n    useEffect(() => {\n        if (select) inputRef.current.focus();\n    }, [select]);\n\n    const emailHandler = (e) => {\n        setEmail(e.currentTarget.value);\n    };\n\n    const onRegisterHandler = (e) => {\n        if (e.currentTarget.children[1].type === 'email') \n        {\n            setSelect(true);\n        }\n    };\n\n    const onClick = (e) => {\n        e.preventDefault();\n        if (email === '' || email.indexOf('@') < 0 || email.indexOf('.', email.indexOf('@')) < 0) \n        {\n            setSelect(true);\n            setEmailError('이메일 주소를 입력하세요.');\n        } \n        else \n        {\n            compareEmail({email}).then(res => {\n                if (res.compareResult) \n                {\n                    history.push({\n                        pathname: '/login',\n                        state: { email }\n                    });\n                } \n                else \n                {\n                    history.push({\n                        pathname: '/regform',\n                        state: { email }\n                    });\n                }\n            });\n        }\n    };\n\n    return (\n        <>\n        <RegisterSection>\n            <RegisterContainer>\n                <RegisterInputDiv onClick={ onRegisterHandler } select={ select }>\n                    <RegisterLabel>이메일 주소</RegisterLabel>\n                    <RegisterInput type=\"email\" value={ email } onChange={ emailHandler } ref={ inputRef } required />\n                </RegisterInputDiv>\n                <RegisterBtn onClick={ onClick }>시작하기</RegisterBtn>\n            </RegisterContainer>\n            <EmailErrorDiv>{ emailError }</EmailErrorDiv>\n        </RegisterSection>\n        </>\n    );\n}\n\nexport default Register;","import React from 'react';\nimport Register from './Register';\nimport styled from 'styled-components';\n\nconst HomeSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`;\nconst HomeContainer = styled.div`\n    width: 666px;\n    height: 500px;\n    color: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    h1 {\n        font-size: 3.15rem;\n        margin-bottom: 0.8rem;\n    }\n    h2 {\n        font-size: 1.65rem;\n        font-weight: 400;\n        margin-bottom: 1.5rem;\n    }\n    h3 {\n        font-size: 1.2rem;\n        font-weight: 500;\n        margin-bottom: 1rem;\n    }\n`;\n\nfunction Home() {\n    return (\n        <HomeSection>\n            <HomeContainer>\n                <h1>영화와 시리즈를 무제한으로.</h1>\n                <h2>다양한 디바이스에서 시청하세요. 언제든 해지하실 수 있습니다.</h2>\n                <h3>시청할 준비가 되셨나요? 멤버십을 등록하거나 재시작하려면 이메일 주소를 입력하세요.</h3>\n                <Register />\n            </HomeContainer>\n        </HomeSection>\n    );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FaChevronDown } from \"react-icons/fa\";\n\nconst ContentImg = styled.img`\n    width: inherit;\n    height: inherit;\n    border-radius: 3px;\n`;\nconst ContentInfo = styled.section`\n    display: none;\n    width: 220px;\n    height: 130px;\n    position: absolute;\n    top: 0;\n    left:0;\n    right:0;\n    background: #202020;\n    border-radius: 3px;\n    overflow: hidden;\n    z-index: 1;\n    flex-direction: column;\n    transition: all ease .5s 0s;\n\n    &:hover {\n        width: 325px;\n        height: 300px;\n        top: -50%;\n        z-index: 10;\n        left: ${props => props.hoverLeft}%;\n    }\n    img {\n        width: inherit;\n    }\n    section {\n        height: calc(1152 / 2048 * 100%);\n        margin: 1rem;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    }\n    div:nth-child(1) {\n        font-size: 19px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    div:nth-child(2) {\n        font-size: 11px;\n    }\n    .ageEle {\n        border: 0.1px solid;\n        padding: 1px 6px;\n        margin-right: 10px;\n    }\n    svg {\n        font-size: 16px;\n        padding: 8px;\n        border: 2px solid gray;\n        border-radius: 2rem;\n    }\n    svg:hover {\n        border: 2px solid white;\n        cursor: pointer;\n    }\n`;\nconst ContentDiv = styled.div`\n    position: relative;\n    background: #202020;\n    width: ${props => props.imgWidth}px;\n    border-radius: 3px;\n    margin: 2.5px;\n\n    &:hover {\n        ${ContentInfo} {\n            display: ${props => props.hoverFlex};\n        }\n    }\n`;\n\nfunction ContentListItem({ content, modalHandler, imgWidth }) {\n    const { bgImgDeskTop, img, title, age, duration, id } = content;\n    const [hoverCenter, setHoverCenter] = useState(0);\n    const [hoverFlex, setSectionFlex] = useState('');\n    \n    const mouseOver = (e) => {\n        const parentEleLeft = e.currentTarget.getBoundingClientRect().left - e.currentTarget.parentElement.children[0].getBoundingClientRect().left;\n        const targetWidth = e.currentTarget.getBoundingClientRect().right - e.currentTarget.getBoundingClientRect().left;\n        const visibleImgCount = Math.floor(window.innerWidth / targetWidth);\n        if (parentEleLeft == 0) {\n            setHoverCenter(0);\n        } else if (parentEleLeft > targetWidth * (visibleImgCount - 1)) {\n            setHoverCenter(-50);\n        } else {\n            setHoverCenter(-25);\n        }\n        setSectionFlex('flex')\n    }\n\n    return (\n        <ContentDiv onMouseOver={ mouseOver } imgWidth={ imgWidth } hoverFlex={ hoverFlex }>\n            <ContentImg src={ img } alt={ title } /> \n            <ContentInfo hoverLeft={ hoverCenter }>\n                    <img src={ bgImgDeskTop } />\n                    <section>\n                        <div>\n                            <span>{ title }</span>\n                            <span onClick={ () => { \n                                    modalHandler(true, content);\n                                    setSectionFlex('')\n                            }}>\n                                <FaChevronDown />\n                            </span>\n                        </div>\n                        <div>\n                            <span className='ageEle'>{ age }</span>\n                            <span className='durationEle'>{ duration }</span>\n                        </div>\n                    </section>\n                </ContentInfo>\n        </ContentDiv>\n    );\n}\n\nContentListItem.propTypes = {\n    id: PropTypes.string,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    age: PropTypes.string,\n    duration: PropTypes.string,\n    info: PropTypes.string,\n    role: PropTypes.string,\n    genreID: PropTypes.number\n}\n\nexport default ContentListItem;","import axios from 'axios';\n\nconst CONTENT_URL = '/api/content';\n\n// content 리스트\nexport async function contentList(genreID) {\n    return await axios.post(CONTENT_URL+'/contentList', genreID).then(res => res.data);\n}\n\n// genre 리스트\nexport async function genreList() {\n    return await axios.get(CONTENT_URL+'/genreList').then(res => res.data);\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\n\nconst TopContentContainer = styled.section`\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    z-index: -1;\n`;\nconst BgImg = styled.div`\n    height: 0;\n    padding-top: calc(1152 / 2048 * 100%);\n    width: 100vw;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\nconst BgInfo = styled.section`\n    position: absolute;\n    top: 0;\n    color: white;\n    margin-left: 4vw;\n    width: 40vw;\n    margin-top: 9%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    \n    img {\n        width: inherit;\n        margin-bottom: 2vw;\n    }\n    .contentInfo {\n        font-size: 1.5vw;\n        font-weight: 400;\n        word-break: keep-all;\n        margin-bottom: 2vw;\n        line-height: 1.3;\n    }\n    .infoBtn {\n        background: #6D6D6EB3;\n        width: fit-content;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 1.3vw;\n        font-weight: bold;\n        padding: 0.6vw 1.6vw;\n        border-radius: 5px;\n        .icon {\n            font-size: 2vw;\n            margin-right: 1vw;\n        }\n        .contentAge {\n            background: #6D6D6EB3;\n            border-left: 2px solid;\n            width: fit-content;\n            padding-right: 3vw;\n            height: 2vw;\n            position: absolute;\n            right: calc(40vw - 100vw + 4vw);\n            padding-left: 0.5vw;\n            display: flex;\n            align-items: center;\n            font-weight: 400;\n        }\n    }\n    .infoBtn:hover {\n        cursor: pointer;\n        background: #6d6d6e8f;\n    }\n`;\n\nfunction TopContent({ randomContent, modalHandler }) {\n    return (\n    <>\n        <TopContentContainer>\n            <BgImg style={{backgroundImage: 'linear-gradient(rgba(0, 0, 0, 0) 73%, rgba(0, 0, 0, 1)), linear-gradient(to left, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.45)), url('+randomContent.bgImgDeskTop+')'}}></BgImg>\n        </TopContentContainer>\n        <BgInfo>\n            <img src={ randomContent.logoImg } />\n            <p className='contentInfo'>{ randomContent.info }</p>\n            <p className='infoBtn'>\n                <AiOutlineInfoCircle className='icon' />\n                <span onClick={ () => { modalHandler(true, randomContent)} }>상세 정보</span>\n\n                <span className='contentAge'>{ randomContent.age }</span>\n            </p>\n        </BgInfo>\n    </>\n    );\n}\n\nexport default TopContent;","import React from 'react';\nimport styled from 'styled-components';\nimport { BsXCircleFill } from \"react-icons/bs\";\n\nconst ModalWrapper = styled.div`\n    display: ${(props) => (props.visible ? 'flex' : 'none')};\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    inset: 0;\n    top: 0;\n    left: 0;\n    background-color: rgb(0 0 0 / 50%);\n    z-index: 10;\n    width: 100%;\n    height: 100%;\n`;\nconst ModalOverlay = styled.div`\n    display: ${(props) => (props.visible ? 'flex' : 'none')};\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    inset: 0;\n    top: 0;\n    left: 0;\n    background-color: rgb(0 0 0 / 50%);\n    z-index: 10;\n    width: 100%;\n    height: 100%;\n`;\nconst ModalInner = styled.div`\n    position: absolute;\n    width: 53vw;\n    height: 84vh;\n    background: rgb(32, 32, 32) no-repeat top / contain;\n    background-image: linear-gradient(to bottom,rgb(0 0 0 / 0%) 17vw,#181818 32vw), url(${(props) => props.img});\n    overflow: auto;\n    border-radius: 5px;\n    outline: none;\n    z-index: 10;\n    padding: 3rem;\n\n    .modalClose {\n        position: absolute;\n        top: 0;\n        right: 0;\n        margin: 1rem;\n        font-size: 2.5rem;\n        color: black;\n    }\n    .modalClose:hover {\n        cursor: pointer;\n        transform: scale(1.1);\n    }\n    img {\n        position: absolute;\n        width: 50%;\n        margin-top: calc(544 / 1280 * 58%);\n    } \n    section {\n        position: absolute;\n        left: 0;\n        display: grid;\n        grid-template-columns: 2fr 1fr;\n        column-gap: 3rem;\n        row-gap: 2rem;\n        font-size: 18px;\n        color: white;\n        margin: calc(calc(544 / 1280 * 60%) + 16vw) 3rem 3rem;\n    }\n    .ageEle {\n        border: 0.1px solid;\n        margin-left: 10px;\n        padding: 1px 6px;\n    }\n    .ageEle, .yearEle {\n        font-size: 16px;\n    }\n    .roleEle {\n        font-size: 14px;\n    }\n    .roleEle span {\n        color: gray;\n    }\n`;\n\nfunction ContentDetailModal({ modalVisible, modalHandler, content }) {\n    const { bgImgDeskTop, logoImg, year, age, info, role } = content;\n\n    return (\n        <>\n            <ModalWrapper visible={ modalVisible } />\n            <ModalOverlay tabIndex=\"-1\" visible={ modalVisible }>\n                <ModalInner tabIndex=\"0\" className=\"modal-inner\" img={ bgImgDeskTop }>\n                    <BsXCircleFill className='modalClose' onClick={ () => { modalHandler(false)} } />\n                    <img src={ logoImg } />\n                    <section>\n                        <div>\n                            <span className='yearEle'>{ year }</span>\n                            <span className='ageEle'>{ age }</span>\n                        </div>\n                        <div className='roleEle'>\n                            <span>출연: </span> \n                            { role }\n                        </div>\n                        <div>{ info }</div>\n                    </section>\n                </ModalInner>\n            </ModalOverlay>\n        </>\n    );\n}\n\nexport default ContentDetailModal;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ContentListItem from './ContentListItem';\nimport { contentList, genreList } from '../_actions/contentAction';\nimport { MdOutlineArrowBackIos, MdOutlineArrowForwardIos } from 'react-icons/md';\nimport TopContent from \"./TopContent\";\nimport ContentDetailModal from \"./ContentDetailModal\";\n\nconst ContentList = styled.div`\n  color: white;\n  padding-top: calc(1152 / 2048 * 77%);\n  overflow: hidden;\n`;\nconst GenreContainer = styled.div`\n  &:hover {\n    .slideIcon:nth-child(2) {\n      left: 0;\n      display: ${props => props.genreTypeProps < 0 ? 'block' : 'none'};\n    }\n    .slideIcon:nth-child(3) {\n      right: 0;\n      display: ${props => props.slideVisibleProps === undefined || props.slideVisibleProps === 1 ? 'block' : 'none'};\n    }\n  }\n  .slideIcon {\n    display: none;\n    padding: 0 0.5vw;\n    width: 3vw;\n    height: ${props => props.imgWidth / 126 * 71}px;\n    position: absolute;\n    z-index: 10;\n    background: #0000003d;\n  }\n  .slideIcon:hover {\n    cursor: pointer;\n    transform: scale(1.1);\n    z-index: 10;\n    background: #00000094;\n  }\n  h3 {\n    font-size: 1.3rem;\n    margin-left: 4vw;\n  }\n`;\nconst GenreContentContainer = styled.div`    \n  margin: 0 4vw 3vw;\n  position: relative;\n`;\nconst GenreList = styled.div`\n  display: flex;\n  width: calc(100vw - 8.8vw);\n`;\nconst ContentList2 = styled.div`\n    color: white;\n    margin: calc(1152 / 2048 * 80%) 3.5vw 3vw;\n    color: white;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    align-items: center;\n`;\n\nfunction Content({ match }) {\n  const [contents, setContents] = useState([]);\n  const [genre, setGenre] = useState([]);\n  const [genreID, setGenreID] = useState(match.params.genreID);\n  const [moveWidth, setMoveWidth] = useState({});\n  const [slideVisible, setSlideVisible] = useState({});\n  const [randomContent, setRandomContent] = useState();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState();\n  const [imgWidth, setImgWidth] = useState(Math.floor((window.innerWidth - window.innerWidth * 0.1) / Math.round((window.innerWidth - window.innerWidth * 0.08) / 225)))\n  const [imgCount, setImgCount] = useState(Math.round((window.innerWidth - window.innerWidth * 0.08) / 225));\n\n  // modal\n  const modalHandler = (openVal, content) => {\n    setModalVisible(openVal);\n    setModalContent(content);\n  };\n\n  // width resize \n  const resizeHandler = () => {\n    window.innerWidth > 900 ?\n    setImgWidth(Math.floor((window.innerWidth - window.innerWidth * 0.1) / Math.round((window.innerWidth - window.innerWidth * 0.08) / 225))) :\n    setImgWidth(Math.floor((window.innerWidth - window.innerWidth * 0.1) / Math.round((window.innerWidth - window.innerWidth * 0.08) / 155)));\n    \n    window.innerWidth > 900 ?\n    setImgCount(Math.round((window.innerWidth - window.innerWidth * 0.08) / 225)):\n    setImgCount(Math.round((window.innerWidth - window.innerWidth * 0.08) / 155));\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeHandler);\n      return () => { window.removeEventListener('resize', resizeHandler) };\n  }, []);\n\n  // genre select\n  useEffect(() => {\n    setGenreID(match.params.genreID);\n  }, [match]);\n\n  useEffect(() => {\n    contentList({ genreID: genreID }).then(res => {\n      setContents(res)\n      setRandomContent(res[Math.floor(Math.random() * res.length)])\n    });\n    genreList().then(res => setGenre(res));\n  }, [genreID]);\n  \n  useEffect(() => {\n    Object.values(genre).map(gItem => {\n      slideVisible[gItem['genreType']] = imgCount >= 6 ? 0 : 1\n    })\n  }, [imgCount, genre]);\n\n  const preSlideHandler = (e) => {\n    const genre = e.target.tagName === 'path' ?\n                    e.currentTarget.parentElement.children[0].innerText : e.target.parentElement.children[0].innerText;\n    const target = e.target.tagName === 'path' ?\n                    e.currentTarget.parentElement.children[3].children[0] : e.target.parentElement.children[3].children[0];\n    const nowImgCount = Math.floor((window.innerWidth - (3 * window.innerWidth / 100)) / (target.children[0].offsetWidth + 6));\n    const preWidth = nowImgCount * (target.children[0].offsetWidth + 6);\n    const translateX = moveWidth[genre] + preWidth > 0 ? 0 : moveWidth[genre] + preWidth;\n    target.style.transform = 'translateX('+translateX+'px)';\n    \n    setMoveWidth({\n      ...moveWidth,\n      [genre]: translateX\n    });\n\n    if (translateX == 0) {\n      setSlideVisible({\n        ...slideVisible,\n        [genre]: 1\n      })\n    }\n  };\n\n  const nextSlideHandler = (e) => {\n    const genre = e.target.tagName === 'path' ?\n                    e.currentTarget.parentElement.children[0].innerText : e.target.parentElement.children[0].innerText;\n\n    // gnere별 state 추가를 위함\n    setMoveWidth({\n      ...moveWidth,\n      [genre]: 0\n    });\n\n    const target = e.target.tagName === 'path' ?\n                    e.currentTarget.parentElement.children[3].children[0] : e.target.parentElement.children[3].children[0]; // GenreListEle\n    const nowImgCount = Math.floor((window.innerWidth - (3 * window.innerWidth / 100)) / (target.children[0].offsetWidth + 6));\n    const translateX = moveWidth[genre] !== undefined ? moveWidth[genre] + (nowImgCount * (target.children[0].offsetWidth + 6) * -1) : nowImgCount * (target.children[0].offsetWidth + 6) * -1;\n    target.style.transform = 'translateX('+translateX+'px)';\n\n    setMoveWidth({\n      ...moveWidth,\n      [genre]: translateX\n    });\n    \n      setSlideVisible({\n        ...slideVisible,\n        [genre]: (6 - nowImgCount < nowImgCount) ? 0 : 1\n      }); \n  };\n\n  return (\n    <>\n    {\n      // detail modal\n      modalVisible && <ContentDetailModal modalVisible={ modalVisible } modalHandler={ modalHandler } content={ modalContent } />\n    }\n    {\n      // top content\n      randomContent !== undefined ? <TopContent randomContent={ randomContent } modalHandler={ modalHandler }  /> : <></>\n    }\n    {\n      // content items\n      Object.values(match.params).length === 0 ?\n      // 기본\n      <ContentList>\n        {\n          genre.map(g => (\n            <GenreContainer key={ g.genreID } genreTypeProps={ moveWidth[g.genreType] } slideVisibleProps={ slideVisible[g.genreType] } imgWidth={imgWidth}>\n              <h3>{ g.genreType }</h3>\n              {/* content pre/next btn */}\n              <MdOutlineArrowBackIos className=\"slideIcon\" onClick={ preSlideHandler } />\n              <MdOutlineArrowForwardIos className=\"slideIcon\" onClick={ nextSlideHandler } />\n              <GenreContentContainer >\n                <GenreList>\n                {\n                  contents.filter(c => c.genreID === g.genreID).map(cg => (\n                    <ContentListItem key={ cg.id } content={ cg } moveWidth={ moveWidth[genre[cg.genreID]['genreType']] } modalHandler={ modalHandler } imgWidth={ imgWidth } />\n                  ))\n                }\n                </GenreList>\n              </GenreContentContainer>\n            </GenreContainer>\n          ))\n        }\n      </ContentList> :\n      // 장르별\n      <ContentList2>\n      {\n        contents.map(content => (\n            <ContentListItem key={ content.id } content={ content } modalHandler={ modalHandler } imgWidth={ imgWidth } />\n        ))\n      }\n      </ContentList2>\n    }\n    </>\n  );\n}\n\nexport default Content;\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../_actions/userAction';\nimport Cookies from 'universal-cookie';\nimport styled, { css } from 'styled-components';\n\nconst LoginSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n`;\nconst LoginContainer = styled.div`\n    margin: 1rem;\n    background-color: rgba(0,0,0,.75);\n    height: 29rem;\n    width: 28rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    ${({ loginError }) => \n        ( loginError != '' &&\n            css `\n                height: 34rem;\n            `\n        )\n    }\n`;\nconst LoginForm = styled.form`\n    height: 18rem;\n    width: 19.3rem;\n\n    h1 {\n        color: white;\n        margin-bottom: 28px;\n    }\n`;\nconst LoginLabel = styled.label``;\nconst LoginInput = styled.input`\n    display: none;\n`;\nconst LoginInputDiv = styled.div`\n    height: 3rem;\n    border: 0;\n    border-bottom: 2px solid #333333;\n    border-radius: 5px;\n    background-color: #333333;\n    display: flex;\n    flex-direction: column;\n    padding: 0 20px;\n    color: #8c8c8c;\n    justify-content: space-evenly;\n\n    // email/pw div를 눌렀을 때 input 나타남\n    ${({ select }) => ( select &&\n        css`\n            ${ LoginLabel } {\n                font-size: 11px;\n            }\n            ${ LoginInput } {\n                display: block;\n                background: none;\n                border: 0;\n                outline: none;\n                color: white;\n                font-size: 16px;\n            }\n        `\n    )}\n`;\nconst LoginButton = styled.button`\n    height: 3rem;\n    border-radius: 5px;\n    border: 0;\n    color: white;\n    background-color: #e50914;\n    font-size: 1.1rem;\n    font-weight: bold;\n    margin-top: 24px;\n    width: inherit;\n`;\nconst LoginErrorDiv = styled.div`\n    ${({ loginError }) => ( loginError == '' &&\n        css `\n            display: none;\n        `\n    )}\n\n    background-color: #E87C03;\n    color: white;\n    padding: 0.5rem 1rem;\n    font-size: 14px;\n    border-radius: 5px;\n    word-break: keep-all;\n    margin-bottom: 16px;\n`;\nconst RegisterLink = styled.div`\n    width: 19.3rem;\n\n    & span {\n        color: #737373;\n    }\n    .registerA {\n        color: white;\n        text-decoration: none;\n    }\n`;\nconst LoginErrorLabel = styled.label`\n    font-size: 13px;\n    color: #E87C03;\n`;\nconst LoginInputSection = styled.section`\n    margin-bottom: 16px;\n`;\n\nfunction Login() {\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const inputRef = useRef([]); // input focus\n    const cookies = new Cookies();\n\n    const [loginError, setLoginError] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [pwError, setPwError] = useState('');\n    const [email, setEmail] = useState(location.state !== undefined ? location.state.email : '');\n    const [password, setPassword] = useState('');\n    const [emailSelect, setEmailSelect] = useState(location.state !== undefined ? true : false);\n    const [pwSelect, setPwSelect] = useState(false);\n\n    useEffect(() => {\n        if (emailSelect) inputRef.current[0].focus();\n    }, [emailSelect]);\n    useEffect(() => {\n        if (pwSelect) inputRef.current[1].focus();\n    }, [pwSelect]);\n    useEffect(() => {\n        window.addEventListener('keydown', (e) => {\n            if (e.key === \"Tab\") {\n                e.preventDefault();\n                !emailSelect ? setEmailSelect(true) : setPwSelect(true);\n            }               \n        });\n    }, [emailSelect, pwSelect]);\n\n    const emailHandler = (e) => {\n        setEmail(e.currentTarget.value);\n    };\n    const passwordHandler = (e) => {\n        setPassword(e.currentTarget.value);\n    };\n\n    const onLoginHandler = (e) => {\n        if (e.currentTarget.children[0].children[1].type === 'text') {\n            setEmailSelect(true);\n        } else if (e.currentTarget.children[0].children[1].type === 'password') {\n            setPwSelect(true);\n        } \n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (email === '' || email.indexOf('@') < 0 || email.indexOf('.', email.indexOf('@')) < 0) \n        {\n            setEmailError('정확한 이메일 주소나 전화번호를 입력하세요.');\n            inputRef.current[0].parentElement.style.borderBottom = '2px solid #E87C03';\n            inputRef.current[1].parentElement.style.borderBottom = '2px solid #333333';\n        } \n        else if (password.length < 4 || password.length > 60) \n        {\n            setPwError('비밀번호는 4 - 60자 사이여야 합니다.');\n            inputRef.current[0].parentElement.style.borderBottom = '2px solid #333333';\n            inputRef.current[1].parentElement.style.borderBottom = '2px solid #E87C03';\n        } \n        else \n        {\n            if (emailError !== '' || pwError !== '') setEmailError(''); setPwError('');\n\n            dispatch(loginUser({ email, password})).then(res => {\n                if (res.payload.result) \n                {\n                    // var date = new Date();\n                    // date.setMinutes(date.getMinutes() + 1);\n                    // cookies.set('token', res.payload.token, {\n                    //     path: '/',\n                    //     expires: date.toUTCString()\n                    // });\n                    history.push({\n                        pathname: '/content'\n                    });\n                } \n                else \n                {\n                    if (res.payload.msg === 'email fail') \n                    {\n                        setLoginError('죄송합니다. 이 이메일 주소를 사용하는 계정을 찾을 수 없습니다. 다시 시도하시거나 새로운 계정을 등록하세요.');\n                        inputRef.current[0].parentElement.style.borderBottom = '2px solid #E87C03';\n                        inputRef.current[1].parentElement.style.borderBottom = '2px solid #333333';\n                    }\n                    else if (res.payload.msg === 'password fail') \n                    {\n                        setLoginError('비밀번호를 잘못 입력하셨습니다. 다시 입력하시거나 비밀번호를 재설정하세요.');\n                        inputRef.current[0].parentElement.style.borderBottom = '2px solid #333333';\n                        inputRef.current[1].parentElement.style.borderBottom = '2px solid #E87C03';\n                    } \n                    else \n                    {\n                        setLoginError('죄송합니다. 로그인을 할 수 없습니다.');\n                    }\n                }\n            });\n        }\n    };\n\n    return (\n        <LoginSection onClick={ onLoginHandler }>\n            <LoginContainer loginError={ loginError }>\n                <LoginForm onSubmit={ onSubmit }>\n                    <h1>로그인</h1>\n                    <LoginErrorDiv loginError={ loginError }>{ loginError }</LoginErrorDiv>\n                    <LoginInputSection onClick={ onLoginHandler }>\n                        <LoginInputDiv select={ emailSelect }>\n                            <LoginLabel>이메일 주소</LoginLabel>\n                            <LoginInput type=\"text\" value={ email } onChange={ emailHandler } ref={el => (inputRef.current[0] = el)} />\n                        </LoginInputDiv>\n                        <LoginErrorLabel>{ emailError }</LoginErrorLabel>\n                    </LoginInputSection>\n                    <LoginInputSection onClick={ onLoginHandler }>\n                        <LoginInputDiv select={ pwSelect }>\n                            <LoginLabel>비밀번호</LoginLabel>\n                            <LoginInput type=\"password\" value={ password } onChange={ passwordHandler } ref={el => (inputRef.current[1] = el)} />\n                        </LoginInputDiv>\n                        <LoginErrorLabel>{ pwError }</LoginErrorLabel>\n                    </LoginInputSection>\n                    <LoginButton type=\"submit\">로그인</LoginButton>   \n                </LoginForm>\n                <RegisterLink>\n                    <span>Netflix 회원이 아닌가요? </span>\n                    <Link className='registerA' to='/'>지금 가입하세요.</Link>\n                </RegisterLink>\n            </LoginContainer>\n        </LoginSection>\n    );\n}\n\nexport default Login;","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Cookies from 'universal-cookie';\nimport { registerUser, loginUser } from '../_actions/userAction';\n\nconst RegFormSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n`;\nconst RegFormContainer = styled.div`\n    margin: 3.5rem 1rem 1rem;\n    height: 26rem;\n    width: 28rem;\n    display: flex;\n    flex-direction: column;\n`;\nconst RegForm = styled.form`\n    height: inherit;\n    width: inherit;\n\n    h1 {\n        font-size: 32px;\n        font-weight: 700;\n        word-break: keep-all;\n    }\n    .subText {\n        font-size: 18px;\n        margin-top: 18px;\n        margin-bottom: 8px;\n    }\n    .subText p {\n        margin-top: 10px;\n    }\n`;\nconst RegFormInputSection = styled.section`\n    margin-bottom: 16px;\n`;\nconst RegFormInputDiv = styled.div`\n    height: 60px;\n    border: 1px solid #8c8c8c;\n    border-radius: 2px;\n    color: #8c8c8c;\n    display: flex;\n    flex-direction: column;\n    padding: 0 8px;\n    justify-content: space-evenly;\n\n    // email/pw div를 눌렀을 때 input 나타남\n    ${({ select }) => ( select &&\n        css`\n            ${ RegFormLabel } {\n                font-size: 13px;\n                font-weight: bold;\n            }\n            ${ RegFormInput } {\n                display: block;\n                background: none;\n                border: 0;\n                outline: none;\n                font-size: 16px;\n            }\n        `\n    )}\n`;\nconst RegFormErrorLabel = styled.label`\n    font-size: 13px;\n    color: #b92d2b;\n`;\nconst RegFormLabel = styled.label``;\nconst RegFormInput = styled.input`\n    display: none;\n`;\nconst RegisterButton = styled.button`\n    height: 64px;\n    border-radius: 3px;\n    border: 0;\n    color: white;\n    background-color: #e50914;\n    font-weight: 500;\n    font-size: 24px;\n    margin-top: 24px;\n    width: inherit;\n`;\n\nfunction RegisterForm() {\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const cookies = new Cookies();\n    const inputRef = useRef([]);\n\n    const [email, setEmail] = useState(location.state.email);\n    const [password, setPassword] = useState('');\n    const [registerInfo, setRegisterInfo] = useState('');\n    const [emailSelect, setEmailSelect] = useState(location.state !== undefined ? true : false);\n    const [pwSelect, setPwSelect] = useState(false);\n    const [emailError, setEmailError] = useState('');\n    const [pwError, setPwError] = useState('');\n\n    useEffect(() => {\n        if (emailSelect) inputRef.current[0].focus();\n    }, [emailSelect]);\n    useEffect(() => {\n        if (pwSelect) inputRef.current[1].focus();\n    }, [pwSelect]);\n\n    const emailHandler = (e) => {\n        setEmail(e.currentTarget.value);\n    };\n    const passwordHandler = (e) => {\n        setPassword(e.currentTarget.value);\n    };\n\n    const onRegisterHandler = (e) => {\n        if (e.currentTarget.children[0].children[1].type === 'text') \n        {\n            setEmailSelect(true);\n        } \n        else if (e.currentTarget.children[0].children[1].type === 'password') \n        {\n            setPwSelect(true);\n        } \n    };\n\n    const onTabKeyHandler = (e) => {\n        if (e.key === \"Tab\") {\n            e.preventDefault();\n            setPwSelect(true);\n        }\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (email === '' || email.indexOf('@') < 0 || email.indexOf('.', email.indexOf('@')) < 0) \n        {\n            setEmailError('이메일 주소를 입력해 주세요.');\n            inputRef.current[0].parentElement.style.border = '1px solid #b92d2b';\n        } \n        else if (password.length < 4 || password.length > 60) \n        {\n            setPwError('비밀번호를 입력해 주세요.');\n            inputRef.current[1].parentElement.style.border = '1px solid #b92d2b';\n        } \n        else \n        {\n            registerUser({ userID: null, email, password }).then(res => {\n                if (res.registerUser) \n                {\n                    dispatch(loginUser({ email, password})).then(res => {\n                        if (res.payload.result) \n                        {\n                            cookies.set('token', res.payload.token);\n                            history.push({\n                                pathname: '/content'\n                            });\n                        } \n                        else \n                        {\n                            history.push({\n                                pathname: '/Register'\n                            });\n                        }\n                    });\n                } \n                else \n                {\n                    setRegisterInfo('죄송합니다. 회원가입을 할 수 없습니다.');\n                }\n            });\n        }\n    };\n\n    return (\n        <RegFormSection>\n            <RegFormContainer>\n            { registerInfo }\n                <RegForm onSubmit={ onSubmit }>\n                    <h1>비밀번호를 설정해 멤버십을 시작하세요.</h1>\n                    <div className='subText'>\n                        <p>몇 단계만 더 거치면 넷플릭스 가입 완료!</p>\n                        <p> 복잡한 단계는 모두 없앴습니다.</p>\n                    </div>\n                    <RegFormInputSection onClick={ onRegisterHandler } onKeyDown={ onTabKeyHandler }>\n                        <RegFormInputDiv select={ emailSelect }>\n                            <RegFormLabel>이메일 주소</RegFormLabel>\n                            <RegFormInput type=\"text\" value={ email } onChange={ emailHandler } ref={el => (inputRef.current[0] = el)} />\n                        </RegFormInputDiv>\n                        <RegFormErrorLabel>{ emailError }</RegFormErrorLabel>\n                    </RegFormInputSection>\n                    <RegFormInputSection onClick={ onRegisterHandler }>\n                        <RegFormInputDiv select={ pwSelect }>\n                            <RegFormLabel>비밀번호를 추가하세요</RegFormLabel>\n                            <RegFormInput type=\"password\" value={ password } onChange={ passwordHandler } ref={el => (inputRef.current[1] = el)} />\n                        </RegFormInputDiv>\n                        <RegFormErrorLabel>{ pwError }</RegFormErrorLabel>\n                    </RegFormInputSection>\n                    <RegisterButton>가입하기</RegisterButton>\n                </RegForm>\n            </RegFormContainer>\n        </RegFormSection>\n    );\n}\n\nexport default RegisterForm;","export default __webpack_public_path__ + \"static/media/loginBackground.2568942a.jpeg\";","export default __webpack_public_path__ + \"static/media/mainBackground.2568942a.jpeg\";","export default __webpack_public_path__ + \"static/media/logo.612aa555.png\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SelectDiv = styled.select`\n    margin-left: 1rem;\n`;\n\nfunction SelectGenre({ selectGenre, genreOptions }) {\n    const history = useHistory();\n\n    const handleGenre = (e) => {\n        history.push({\n            pathname: e.target.value === 'all' ? '/content/genre' : '/content/genre/' + e.target.value\n        });\n    };\n    \n    return (\n        <SelectDiv onChange={ handleGenre } value={ selectGenre !== undefined ? selectGenre : 'all' } >\n            <option value=\"all\">전체</option>\n            { genreOptions.map(genre => \n                <option key={ genre.genreID } value={ genre.genreID }>\n                    { genre.genreType }\n                </option>\n            )}\n        </SelectDiv>\n    );\n}\n\nexport default SelectGenre;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiChevronRight } from \"react-icons/bi\";\n\nfunction GenreInfo({ selectGenreType }) {\n    return (\n        <>\n            <Link to='/content/genre'\n                style={selectGenreType === undefined ? \n                { textDecoration: 'none', color: 'white', fontSize: 'x-large', fontWeight: '700' } : { textDecoration: 'none', color: '#808080', fontSize: '17px', fontWeight: '400' }}>\n            장르\n            </Link>\n                {\n                    selectGenreType === undefined ? <></> :\n                    <>\n                        <BiChevronRight style={{ color: '#808080', fontSize: '17px', fontWeight: '400' }} />\n                        <ul style={{ listStyle: 'none' }}>\n                            <li style={{ fontSize: 'x-large', fontWeight: '700' }}>\n                                { selectGenreType }\n                            </li>\n                        </ul>\n                    </>\n                }\n        </>\n    );\n}\n\nexport default GenreInfo;\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Cookies from 'universal-cookie';\nimport logo from '../static/images/logo.png';\nimport { logoutUser } from '../_actions/userAction';\nimport { genreList } from \"../_actions/contentAction\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport SelectGenre from \"./SelectGenre\";\nimport GenreInfo from \"./GenreInfo\";\n\nconst Nav = styled.nav`\n    position: fixed;\n    top: 0;\n    width: -webkit-fill-available;\n    z-index: 3;\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0;\n    color: white;\n\n    div {\n        flex: 1 1 40%;\n    }\n    & a {\n        color: white;\n        text-decoration: none;\n    }\n    .logo_navBtns {\n        display: flex;\n        align-items: center;\n    }\n    .logo_navBtns ul {\n        width: 115px;\n        list-style: none;\n        display: flex;\n        justify-content: space-around;\n        font-size: 14px;\n    }\n    .login_outBtn {\n        position: relative;\n        margin-right: 13px;\n        cursor: pointer;\n        display: flex;\n        justify-content: flex-end;\n    }\n    .login_outBtn div {\n        justify-content: flex-end;\n    }\n    .login_outBtn a, button {\n        padding: 9px 17px;\n        margin-right: 18px;\n        border-radius: 4px;\n        background-color: #e50914;\n        text-decoration: none;\n        color: white;\n        margin: 0;\n        border: 0;\n\n        ${(props) =>\n            props.location == '/regform' &&\n            css`\n                background-color: transparent;\n                color: black;\n                font-weight: bold;\n                font-size: 20px;\n            `\n        }\n    }\n    .login_outBtn:hover {\n        .listIcon {\n            animation: login_outIcon .3s forwards;\n        }\n    }\n    @keyframes login_outIcon {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(180deg);\n        }\n    }\n`;\nconst UserEmail = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n`;\nconst UserBtnList = styled.ul`\n    list-style: none;\n    display: none;\n    position: absolute;\n    top: 44px;\n    right: -1px;\n    color: white;\n    background-color: #000000bf;\n    border: 1px solid #808080a8;\n    padding: 5px 10px;\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: -78%;\n        right: 10%;\n        width: 0;\n        height: 26px;\n        border: 0.55em solid transparent;\n        border-bottom-color: var(--back-color);\n        border-top: 0;\n        margin: 0 7px;\n        color: #ffffffcf;\n    }\n    ${ Nav } .login_outBtn:hover & {\n        display: block;\n    }\n    & li {\n        cursor: pointer;\n    }\n`;\nconst SubNav = styled.div`\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    color: white;\n`;\n\nfunction Navigator({ location, user }) {\n    const cookies = new Cookies();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [scrollY, setScrollY] = useState(0);\n\n    // for content genre select\n    const [genreID, setGenreID] = useState();\n    const [genreType, setGenreType] = useState();\n    const [genreOptions, setGenreOptions] = useState([]);\n\n    useState(() => {\n        window.addEventListener('scroll', () => {\n            setScrollY(window.scrollY);\n        });\n    }, []);\n\n    const onLogout = (e) => {\n        e.preventDefault();\n        cookies.remove('token')\n        dispatch(logoutUser({token: cookies.get('token')}))\n\n        history.push({\n        pathname: '/'\n        })\n    };\n\n    useEffect(() => {\n        genreList().then(res => setGenreOptions(res));\n    }, []);\n\n    useEffect(() => {\n        if (location.indexOf('/content/genre') >= 0) \n        {\n            if (!isNaN(location.slice(-1)) && genreOptions.length !== 0) \n            {\n                setGenreID(location.slice(-1));\n                setGenreType(genreOptions[location.slice(-1)]['genreType']);\n            } \n            else \n            {\n                setGenreID(undefined);\n                setGenreType();\n            }\n        }\n    }, [location, genreOptions]);\n    \n    return (\n        <Nav style={\n            location === '/' ? {padding: '22px 51px'} : \n            location === '/login' ? {padding: '18px 40px', background: 'linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0))'} :\n            location === '/regform'  ? {padding: '19px 39px', borderBottom: '1px solid #e6e6e6' } :\n            location === '/account' || location === '/password' ? {padding: '12px 40px', background: 'black' } :\n            {padding: '18px 54px', background: scrollY === 0 ? 'linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.3) 50%, rgba(0, 0, 0, 0))' : 'black'}\n        }>\n            <div className='logo_navBtns'>\n                <Link to={ user.isLogin ? '/content' : '/' }>\n                    <img src={ logo } alt='logo' style={\n                        location === '/' || location === '/account' || location === '/password' ? {width: '11.5rem'} : \n                        location === '/login' ? {width: '15rem'} :\n                        location === '/regform' ? {width: '14.5rem'} :\n                        {width: '8.8rem'}\n                    } />\n                </Link>\n                { \n                    location.indexOf('/content') >= 0 &&\n                    <ul>\n                        <Link to={ user.isLogin ? '/content' : '/' }>홈</Link>\n                        <Link to='/content/genre'>장르별</Link>\n                    </ul>\n                }\n            </div>\n            {\n                location !== '/login' && \n                <div className='login_outBtn' >\n                    {\n                    user.isLogin ?\n                    <>\n                        <UserEmail>\n                            { user.userEmail }\n                            <AiFillCaretDown className='listIcon' />\n                        </UserEmail>\n                        <UserBtnList>\n                            <li onClick={ () => history.push({ pathname: '/account' }) }>계정</li>\n                            <li onClick={ onLogout }>짱플릭스에서 로그아웃</li>\n                        </UserBtnList>\n                    </>\n                    :\n                    <Link to='/login'>로그인</Link>\n                    }\n                </div>\n            }\n            {\n                location.indexOf('/content/genre') >= 0 &&\n                <SubNav>\n                    <GenreInfo selectGenreType={ genreType } />\n                    {\n                        genreType === undefined ?\n                        <SelectGenre selectGenre={ genreID } genreOptions={ genreOptions } /> : <></>\n                    }\n                </SubNav>\n            }\n        </Nav>\n    );\n}\n\nexport default Navigator;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, user, ...rest }) => {\n    return (\n        <Route {...rest } render={\n            props => (\n                user.isLogin ?\n                    <Component { ...props }  user={ user } />\n                    : <Redirect to=\"/login\" />\n            )\n        } />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, restricted, user, ...rest }) => {\n    return (\n        <Route { ...rest } render={\n            props => (\n                user.isLogin && restricted ?\n                    <Redirect to=\"/content\" /> :\n                    <Component {...props} />\n            )\n        } />\n    );\n};\n\nexport default PublicRoute;","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BsCheckCircleFill } from \"react-icons/bs\";\n\nconst AccountSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n`;\nconst AccountContainer = styled.div`\n    height: 60vh;\n    width: 71vw;\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n        font-weight: inherit;\n        font-size: 2.5em;\n        color: #333;\n        margin-bottom: 0.5em;\n    }\n`;\nconst UserInfoContainer = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    margin-top: 2rem;\n\n    .updateInfoLabel {\n        font-size: 1.4em;\n        color: #757575;\n    }\n    .updateInfoContainer {\n        flex: 2;\n    }\n    .updateInfoContainer div:nth-child(1) {\n        font-weight: 700;\n        font-size: 1.2em;\n    }\n    .updateInfoContainer div:nth-child(2) {\n        display: flex;\n        justify-content: space-between;\n        font-size: 1.2em;\n        color: #757575;\n        margin-top: 1rem;\n    }\n    .updateInfoContainer div:nth-child(2) a {\n        color: #0073e6;\n        text-decoration: none;\n    }\n`;\nconst UserUpdateInfo = styled.div`\n    height: 3.5rem;\n    margin-bottom: 0.5rem;\n    background: #5ea53f;\n    color: white;\n    display: flex;\n    align-items: center;\n\n    svg {\n        font-size: 1.5rem;\n        margin: 0 1.5rem;\n    }\n`;\n\nfunction Account({ user }) {\n    const location = useLocation();\n    \n    return(\n        <AccountSection>\n            <AccountContainer>\n                <h1>계정</h1> \n                { location.state !== undefined && \n                    <UserUpdateInfo>\n                        <BsCheckCircleFill />\n                        <div>\n                            비밀번호가 변경되었습니다.\n                        </div>\n                    </UserUpdateInfo>\n                }\n                <hr />\n                <UserInfoContainer>\n                    <div className='updateInfoLabel'>정보</div>\n                    <div className='updateInfoContainer'>\n                        <div>{ user.userEmail }</div>\n                        <div>\n                            <span>비밀번호: ******</span>\n                            <Link to='/password'>비밀번호 변경</Link>\n                        </div>\n                    </div>\n                </UserInfoContainer>\n            </AccountContainer>\n        </AccountSection>\n    );\n}\n\nexport default Account;","import React, { useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { compareEmail, updatePassword } from '../_actions/userAction';\n\nconst UpdatePasswordSection = styled.section`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n`;\nconst UpdatePasswordContainer = styled.div`\n    height: 70vh;\n    width: 71vw;\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n        font-weight: inherit;\n        font-size: 2.5em;\n        color: #333;\n        margin-bottom: 0.5em;\n    }\n`;\n\nconst UpdateInputSection = styled.section`\n    margin-bottom: 55px;\n    width: 50%;\n`;\nconst UpdateInputDiv = styled.div`\n    height: 48px;\n    border: 1px solid ${ props => props.borderStyle };\n    border-radius: 2px;\n    color: #8c8c8c;\n    display: flex;\n    flex-direction: column;\n    padding: 0 8px;\n    justify-content: space-evenly;\n    background: white;\n\n    // email/pw div를 눌렀을 때 input 나타남\n    ${({ select }) => ( select &&\n        css`\n            ${ UpdateLabel } {\n                font-size: 13px;\n            }\n            ${ UpdateInput } {\n                display: block;\n                background: none;\n                border: 0;\n                outline: none;\n                font-size: 16px;\n            }\n        `\n    )}\n`;\nconst UpdateErrorLabel = styled.label`\n    font-size: 13px;\n    color: #b92d2b;\n`;\nconst UpdateLabel = styled.label`\n    font-size: initial;\n`;\nconst UpdateInput = styled.input`\n    display: none;\n`;\nconst UpdateSaveBtn = styled.button`\n    background-color: #0f84fa;\n    color: #fff;\n`;\nconst UpdateCancelBtn = styled.button`\n    margin-left: 0.8rem;\n    color: #333;\n    background: #ccc;\n`;\nconst BtnSection = styled.section`\n    button {\n        padding: 1rem 2.7rem;\n        border: 0;\n        border-radius: 2px;\n        box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 27%);\n        font-weight: bold;\n    }\n`;\n\nfunction UpdateUserPassword({ user }) {\n    const history = useHistory();\n    const inputRef = useRef([]);\n    const [newPwError, setNewPwError] = useState('');\n    const [pwError, setPwError] = useState('');\n    const [newPwConfirmError, setNewPwConfirmError] = useState('');\n    const [inputValue, setInputValue] = useState({\n        0: '',\n        1: '',\n        2: ''\n    })\n    const [inputSelect, setInputSelect] = useState({\n        0: {\n            select: false,\n            borderColor: '#8c8c8c'\n        },\n        1: {\n            select: false,\n            borderColor: '#8c8c8c'\n        },\n        2: {\n            select: false,\n            borderColor: '#8c8c8c'\n        }\n    });\n    \n    useEffect(() => {\n        if (inputSelect[0]['select']) \n        {\n            inputRef.current[0].focus();\n            inputFocusHandler(0);\n        }\n    }, [inputSelect[0]]);\n    useEffect(() => {\n        if (inputSelect[1]['select']) \n        {\n            inputRef.current[1].focus();\n            inputFocusHandler(1);\n        }\n    }, [inputSelect[1]]);\n    useEffect(() => {\n        if (inputSelect[2]['select']) \n        {\n            inputRef.current[2].focus();\n            inputFocusHandler(2);\n        }\n    }, [inputSelect[2]]);\n    useEffect(() => {\n        if (newPwError !== '' && inputValue[1] !== '')\n        {\n            setNewPwError('');\n        }\n        if (newPwConfirmError !== '' && inputValue[2] !== '')\n        {\n            setNewPwConfirmError('');\n        }\n    }, [inputValue]);\n\n    const inputFocusHandler = (id) => {\n        Object.keys(inputSelect).map(input => {\n            if (input != id) {\n                if (inputSelect[input]['select'] && inputValue[input] === '') {\n                    setInputSelect({\n                        ...inputSelect,\n                        [input]: {\n                            select: false,\n                            borderColor: '#8c8c8c'\n                        }\n                    });\n                }\n            }\n        });\n    };\n    const inputValueHandler = (e) => {\n        setInputValue({\n            ...inputValue,\n            [e.currentTarget.parentElement.id]: e.currentTarget.value\n        });\n        setInputSelect({\n            ...inputSelect,\n            [e.currentTarget.parentElement.id]: {\n                select: true,\n                borderColor: e.currentTarget.value.length < 4 || e.currentTarget.value.length > 60 ? '#0071eb' : '#5fa53f'\n            }\n        });\n    };\n    const inputClickHandler = (e) => {\n        setInputSelect({\n            ...inputSelect,\n            [e.currentTarget.children[0].id]: {\n                select: true,\n                borderColor: '#0071eb'\n            }\n        });\n    };\n    const updatePWHandler = () => {\n        const emptyInputID = Object.keys(inputValue).filter(input => inputValue[input] === '');\n        const inputSelectobj = {};\n\n        Object.keys(inputValue).map(input => {\n            if (inputValue[input] === '')\n            {\n                inputSelectobj[input] = {\n                    select: input == Math.min.apply(null, emptyInputID) ? true : false,\n                    borderColor: input == 0 ? '#0071eb' : '#b92d2b'\n                }\n            }\n            else\n            {\n                inputSelectobj[input] = inputSelect[input];\n            }\n        });\n        if (inputValue[1] === '' || (inputValue[1].length < 4 || inputValue[1].length > 60)) setNewPwError('비밀번호는 4 - 60자 사이여야 합니다.');\n        if (inputValue[2] === '' || inputValue[1] !== inputValue[2]) \n        {\n            setNewPwConfirmError('새 비밀번호와 일치해야 합니다.');\n        }\n        setInputSelect(inputSelectobj);\n\n        if (emptyInputID.length === 0)\n        {\n            compareEmail({ email: user.userEmail }).then(res => {\n                if(inputValue[0] === res.userPW && (inputValue[1].length >= 4 || inputValue[1].length <= 60) && inputValue[1] === inputValue[2])\n                {\n                    updatePassword({ password: inputValue[2], email: user.userEmail}).then(res => {\n                        if (res.updateResult)\n                        {\n                            history.push({\n                                pathname: '/account',\n                                state: { info: 'password update success' }\n                            });\n                        }\n                    })\n                }\n                else\n                {\n                    setPwError('비밀번호를 잘못 입력하셨습니다.');\n                    setInputSelect({\n                        ...inputSelect,\n                        [0]: {\n                            select: true,\n                            borderColor: '#b92d2b'\n                        }\n                    });\n                }\n            });\n        }\n        \n    };\n\n    return(\n        <UpdatePasswordSection>\n            <UpdatePasswordContainer>\n                <h1>비밀번호 변경</h1>\n                <UpdateInputSection onClick={ inputClickHandler }>\n                    <UpdateInputDiv select={ inputSelect[0]['select'] } borderStyle={ inputSelect[0]['borderColor'] } id='0'>\n                        <UpdateLabel>기존 비밀번호</UpdateLabel>\n                        <UpdateInput type=\"password\" value={ inputValue['0'] } onChange={ inputValueHandler } ref={el => (inputRef.current[0] = el)} />\n                    </UpdateInputDiv>\n                    <UpdateErrorLabel>{ pwError }</UpdateErrorLabel>\n                </UpdateInputSection>\n                <UpdateInputSection onClick={ inputClickHandler }>\n                    <UpdateInputDiv select={ inputSelect[1]['select'] } borderStyle={ inputSelect[1]['borderColor'] } id='1'>\n                        <UpdateLabel>새 비밀번호</UpdateLabel>\n                        <UpdateInput type=\"password\" value={ inputValue['1'] } onChange={ inputValueHandler } ref={el => (inputRef.current[1] = el)} />\n                    </UpdateInputDiv>\n                    <UpdateErrorLabel>{ newPwError }</UpdateErrorLabel>\n                </UpdateInputSection>\n                <UpdateInputSection onClick={ inputClickHandler }>\n                    <UpdateInputDiv select={ inputSelect[2]['select'] } borderStyle={ inputSelect[2]['borderColor'] } id='2'>\n                        <UpdateLabel>새 비밀번호 재입력</UpdateLabel>\n                        <UpdateInput type=\"password\" value={ inputValue['2'] } onChange={ inputValueHandler } ref={el => (inputRef.current[2] = el)} />\n                    </UpdateInputDiv>\n                    <UpdateErrorLabel>{ newPwConfirmError }</UpdateErrorLabel>\n                </UpdateInputSection>\n\n                <BtnSection>\n                    <UpdateSaveBtn onClick={ updatePWHandler }>저장</UpdateSaveBtn>\n                    <UpdateCancelBtn>취소</UpdateCancelBtn>\n                </BtnSection>\n            </UpdatePasswordContainer>\n        </UpdatePasswordSection>\n    );\n}\n\nexport default UpdateUserPassword;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Content from './components/Content';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport RegisterForm from './components/RegisterForm';\nimport loginbackground from '../src/static/images/loginBackground.jpeg';\nimport mainbackground from '../src/static/images/mainBackground.jpeg';\nimport { createGlobalStyle, css } from 'styled-components';\nimport Navigator from './components/Navigator';\nimport Cookies from 'universal-cookie';\nimport { loginCheck } from './_actions/userAction';\nimport PrivateRoute from './components/route_control/PrivateRoute';\nimport PublicRoute from './components/route_control/PublicRoute';\nimport Account from './components/Account';\nimport UpdateUserPassword from './components/UpdateUserPassword';\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  font-size: 14px;\n}\n* {\n  margin: 0;\n  padding: 0;\n}\nbody {\n  ${({ location }) => \n    ( \n      location === '/' &&\n        css `\n        background: linear-gradient(rgba(0,0,0,0.8), rgba(0,0,0,0.3) ,rgba(0,0,0,0.9)),url(${mainbackground}) no-repeat left 67% / cover;\n        height: 100vh;\n        `\n      ||\n      location === '/login' &&\n        css `\n        background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)),url(${loginbackground}) no-repeat left top / 139rem;\n        `\n      ||\n      location === '/regform' &&\n        css `\n        background: #f3f3f3;\n        `\n      ||\n      location === '/account' || location === '/password' &&\n        css `\n        background: #f3f3f3;\n        `\n      ||\n        css`\n        background: black;\n        `\n    )\n  }\n`;\n\n  function App() {\n  const location = useLocation();\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n  let user = useSelector(state => state.user);\n\n  // login check\n  useEffect(() => {\n      dispatch(loginCheck({ token: cookies.get('token') }));\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle location={ location.pathname } />\n      <Navigator user={ user } location={ location.pathname } />\n      <Switch>\n        // PrivateRoute: 회원만 접근 가능\n        // PublicRoute: 모든 사용자 접근 가능\n        // restricted :: true: 로그인 여부 관계없이 접근 가능 / false: 로그인 상태에선 접근 불가능\n        <PublicRoute restricted={true} path=\"/\" component={ Home } user={ user } exact />\n        <PublicRoute restricted={true} path=\"/login\" component={ Login } user={ user } />\n        <PublicRoute restricted={true} path=\"/register\" exact={ true } component={ Register } user={ user } />\n        <PublicRoute restricted={true} path=\"/regform\" component={ RegisterForm } user={ user } />\n        <PrivateRoute path=\"/content\" component={ Content } user={ user } exact />\n        <PrivateRoute path=\"/content/:subMenu\" component={ Content } user={ user } exact />\n        <PrivateRoute path=\"/content/:subMenu/:genreID\" component={ Content } user={ user } exact />\n        <PrivateRoute path=\"/account\" component={ Account } user={ user } exact />\n        <PrivateRoute path=\"/password\" component={ UpdateUserPassword } user={ user } exact />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOGIN_CHECK, LOGIN_USER, LOGOUT_USER } from '../_actions/types'\n\nconst initialState = {\n    isLogin: false,\n    userEmail: undefined\n};\n\nexport default function (state=initialState, action) {\n    switch (action.type) {\n        case LOGIN_CHECK:\n            return action.payload === false ? { isLogin: false, userEmail: undefined } : { isLogin: true, userEmail: action.payload };\n        case LOGIN_USER:\n            return action.payload.result === true ? { isLogin: true, userEmail: action.payload.userEmail } : { ...state };\n        case LOGOUT_USER:\n            return action.payload === true ? { isLogin: false, userEmail: undefined} :\n            { ...state };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './userReducer';\nimport content from './contentReducer';\n\nconst rootReducer = combineReducers({\n    user,\n    content\n});\n\nexport default rootReducer;","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport promiseMiddlerware from 'redux-promise';\nimport reducer from './_reducers/index';\nimport persistStore from 'redux-persist/es/persistStore';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport persistReducer from 'redux-persist/es/persistReducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persisted = persistReducer(persistConfig, reducer);\n\nconst store = createStore(persisted, compose(\n  applyMiddleware(promiseMiddlerware,reduxThunk),\n  window.navigator.userAgent.includes('Chrome') ?\n  window.__REDUX_DEVTOOLS_EXTENSION__ && \n  window.__REDUX_DEVTOOLS_EXTENSION__() : compose\n));\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={ store }>\n    <PersistGate persistor={ persistor }>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}